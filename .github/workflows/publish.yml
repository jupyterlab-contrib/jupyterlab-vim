# This workflow will publish a package to npm and pypi when a pull request is merged.
# The version of the package is automatically bumped using 'phips28/gh-action-bump-version@master'.

name: PyPi Package

on:
  push:
    tags: ['*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Version part to upgrade (major | minor | patch)'     
        required: true
        default: 'patch'

jobs:
  publish-pypi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          default: ${{ github.event.inputs.version }}
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # JupyterLab needed to install `jlpm` for npm publication
          pip install build jupyterlab
      - name: Build package
        run: |
          python -m build

      - name: Publish package to PyPi
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      - run: npm install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          
      - name: Create Release
        run: |
          hub release create \
          ${{ env.NEW_TAG }} \
          -m "Release ${{ env.NEW_TAG }}" \
          -a ./dist/* 
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ steps.version-bump.outputs.newTag || env.GITHUB_REF }}
